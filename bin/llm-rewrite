#!/usr/bin/env bash

if [[ "$4" = "" ]]; then
  echo "Usage: llm-rewrite <filepath> <filetype> <startln> <endln>"
  exit 0
fi

if ! command -v diffuse &> /dev/null; then
  echo "Command diffuse is required but missing"
  any-key
  exit 0
fi

filepath="$1"
filetype="$2"
startln="$3"
endln="$4"

echo "Enter your prompt (Ctrl+D to finish):"
userquery=$(cat)
echo "$text"

vllm="https://askgenie-api.oagpuservices.com"
filename=$(basename "$filepath")

content=$(sed -n "${startln},${endln}p" "$filepath")

gen() {
  prompt="
    You are an expert of programming. Your task is to assists the user to enhance their code.

    File name: ${filename}
    Programming language: ${filetype}

    *User highlighted code snippet*:
    <code>
${content}
    </code>

    *User query*:
    <user_query>
      ${userquery}
    </user_query>

    *Instructions*:
    1. Output the revised code in a codeblock.
    2. Output only the code, but nothing else. Do not output any thinking process and explanation.
    3. Align to the coding style that user submitted as much as you can.
    4. Your output code will be used to replace the user submitted code directly, so mind the indentation and scoping.

    *Example*:
    \`\`\`python
    print \"hello world\"
    \`\`\`

    *Example*:
    \`\`\`javascript
    console.log(\"hello world\");
    \`\`\`
  "
  # Create a JSON payload with the user prompt and max tokens
  json=$(jq -n --arg content "$prompt" '{
    messages: [{role: "user", content: $content}],
    max_tokens: 256,
    temperature: 0.7,
    top_p: 0.8,
  }')

  # Send a POST request to the vLLM API and extract the response content
  out=$(
    curl -s -X POST \
      "${vllm}/v1/chat/completions" \
      -H 'accept: application/json' \
      -H 'Content-Type: application/json' \
      -d "$json" | jq -r '.choices[0].message.content'
  )

  # remove the first and last line to return (extract code from the markdown code block)
  echo "$out" | sed '1d;$d'
}

replace_code_in_file() {
  local filepath=$1 startln=$2 endln=$3 code=$4

  # Create a temporary file to store the code to be inserted
  tmpfile=$(mktemp)
  echo "$code" > "$tmpfile"

  # Create a backup of the original file
  backupfile=$(mktemp)
  cp "$filepath" "$backupfile"

  # Replace the specified lines in the file with the contents of the temporary file
  sed -i -e "${startln},${endln}d" -e "$((startln - 1))r ${tmpfile}" "$filepath"
  rm "$tmpfile"

  # Compare the modified file with the backup
  diffuse "$backupfile" "$filepath"
  rm "$backupfile"
}

echo "generating code..."
code=$(gen "$userquery")
replace_code_in_file "$filepath" "$startln" "$endln" "$code"
